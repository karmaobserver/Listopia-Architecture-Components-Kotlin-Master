apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'androidx.navigation.safeargs'

kapt {
    javacOptions {
        // Increase the max count of errors from annotation processors.
        // Default is 100.
        option("-Xmaxerrs", 500)
    }
}

android {
    compileSdkVersion rootProject.compileSdkVersion
    dataBinding {
        enabled = true
    }
    defaultConfig {
        applicationId "com.aleksej.makaji.listopia"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            applicationIdSuffix ".dev"
            debuggable true
            //NORMAL backend port
            //buildConfigField "String", "BASE_URL", "\"http://192.168.0.17:8080/\""
            //DEBUG backend Port
            buildConfigField "String", "BASE_URL", "\"http://192.168.0.17:5000/\""
            //buildConfigField "String", "BASE_URL", "\"http://192.168.0.11:5000/listopia-f7bba/us-central1/app/\""
            //buildConfigField "String", "BASE_URL", "\"http://localhost:5000/listopia-f7bba/us-central1/app/\""
            //buildConfigField "String", "BASE_URL", "\"https://us-central1-listopia-f7bba.cloudfunctions.net/app/\""
        }
        release {
            minifyEnabled false
            buildConfigField "String", "BASE_URL", "\"http://localhost:5000/listopia-f7bba/us-central1/app/\""
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Support and Design
    implementation "androidx.appcompat:appcompat:$rootProject.supportLibraryVersion"
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.constraintLayoutVersion"
    implementation "androidx.recyclerview:recyclerview:$rootProject.supportLibraryVersion"

    // Material Design
    implementation "com.google.android.material:material:$rootProject.materialVersion"

    // Kotlin
    implementation "androidx.core:core-ktx:$rootProject.ktxVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$rootProject.kotlinVersion"

    // Dagger dependencies
    implementation "com.google.dagger:dagger:$rootProject.daggerVersion"
    implementation "com.google.dagger:dagger-android:$rootProject.daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$rootProject.daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$rootProject.daggerVersion"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$rootProject.coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$rootProject.coroutinesVersion"

    // Network libraries
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofitSnaphotVersion" exclude module: 'httpclient'
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofitSnaphotVersion" exclude module: 'httpclient'
    implementation "com.squareup.okhttp3:okhttp:$rootProject.okHttpVersion" exclude module: 'httpclient'

    // Stetho
    implementation "com.facebook.stetho:stetho:$rootProject.stethoVersion"
    implementation "com.facebook.stetho:stetho-okhttp3:$rootProject.stethoVersion"

    // Timber Log util tool
    implementation "com.jakewharton.timber:timber:$rootProject.timberVersion"

    // Glide
    implementation "com.github.bumptech.glide:glide:$rootProject.glideVersion"
    annotationProcessor "com.github.bumptech.glide:compiler:$rootProject.glideVersion"

    //Circle image view
    implementation "com.mikhaellopez:circularimageview:$rootProject.circularimageviewVersion"

    //Firebase
    implementation "com.firebaseui:firebase-ui-auth:$rootProject.firebaseUi"
    implementation "com.google.firebase:firebase-core:$rootProject.firebaseCoreVersion"
    implementation "com.google.firebase:firebase-messaging:$rootProject.firebaseMessagingVersion"

    //Firestore
    implementation "com.firebaseui:firebase-ui-firestore:$rootProject.firebaseUi"

    // Architecture Dependencies
    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$rootProject.navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$rootProject.navigationVersion"

    // LifeCycle
    implementation "androidx.lifecycle:lifecycle-extensions:$rootProject.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel:$rootProject.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$rootProject.lifecycleVersion"

    // Room
    implementation "androidx.room:room-runtime:$rootProject.roomVersion"
    implementation "androidx.room:room-ktx:$rootProject.roomVersion"
    kapt "androidx.room:room-compiler:$rootProject.roomVersion"

    // Paging
    implementation "androidx.paging:paging-runtime:$rootProject.pagingVersion"

    //WorkManager
    implementation "androidx.work:work-runtime-ktx:$rootProject.workManagerVersion"

    implementation 'androidx.fragment:fragment-ktx:1.2.0-alpha04'


    // Testing dependencies (not adding for rest components, since we will not write unit and integration tests)
    testImplementation "junit:junit:$rootProject.junitVersion"
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

subprojects {
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << '-Xmaxerrs' << '500'
        }
    }
}

apply plugin: 'com.google.gms.google-services'
